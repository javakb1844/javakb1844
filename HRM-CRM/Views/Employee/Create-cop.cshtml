@model Services.HRMS.DropDownListClass
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_MainLayout.cshtml";
    var educationCount = 0;
    var experienceCount = 0;
    var dependentsCount = 0;


    var GenderselectList = new SelectList(
        new List<SelectListItem>
        {
            new SelectListItem {Selected = true,Text = "Male", Value = "M"},
            new SelectListItem {Selected = false,Text = "Female", Value = "F"},
            new SelectListItem {Selected = false,Text = "Not Prefered", Value = "N"},
        }, "Value", "Text");
}
<style>
    .div-none{


        pointer-events:none;
    }
</style>
<section>

    <!-- Page content-->
    <div class="content-wrapper">
        <h3>Add Employee</h3>
        <div class="panel panel-default">
            <div class="col-sm-12">
                <div class="panel-heading col-sm-6">
                    Add Employee Info

                </div>
                <div>
                    <select class="form-control" data-val="true" style="float: right;  width: 200px; margin-top: 5px; display:none" data-val-number="The field LookDesignationId must be a number." id="mode" name="mode" placeholder="M,F,N">
                        <option value="1">Potrait Mode</option>
                        <option value="2">Tab Mod</option>
                    </select>

                </div>
            </div>
            <div class="panel-body">
                @using (Html.BeginForm("Create", "Employee", FormMethod.Post, new { id = "frmInsert", enctype = "multipart/form-data" }))
                {
                    <div class="col-sm-2 first current" rel="1">
                        <span style="font-size:23px">1.</span>Add Bio data<br />
                    </div>
                    <div class="col-sm-2 first" rel="2">
                        <span style="font-size:23px">2.</span>Profile<br />
                    </div>
                    <div class="col-sm-2 first" rel="3">
                        <span style="font-size:23px">3.</span>Education<br />
                    </div>
                    <div class="col-sm-2 first" rel="4">
                        <span style="font-size:23px">4.</span>Experience<br />
                    </div>
                    <div class="col-sm-2 first" rel="5">
                        <span style="font-size:23px">5.</span>Dependents<br />
                    </div>
                    <div class="col-sm-1 first" rel="6">
                        <span style="font-size:23px">6.</span>Docs<br />
                    </div>
                    <div class="col-sm-1 first" rel="7">
                        <span style="font-size:23px">7.</span>HR<br />
                    </div>

                    <div class="col-sm-12 lr-padding-5">
                        <h4 class="genCls" id="cls_1">
                            Bio Info
                            <br>
                            <small>Add Bio data</small>
                           
                        </h4>

                        <fieldset class="genCls " id="fcls_1">
                            <div class="col-sm-6">
                                <div class="form-group">
                                    <label>First Name<span class='required'>*</span></label>
                                    @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control", placeholder = "First Name" })
                                </div>
                            </div>
                            <div class="col-sm-6">
                                <div class="form-group">
                                    <label>Last Name</label>
                                    @Html.TextBoxFor(m => m.LastName, new { @class = "form-control", placeholder = "Last Name" })

                                </div>
                            </div>
                            <div class="col-sm-6">
                                <div class="form-group">
                                    <label>Father Name </label>
                                    @Html.TextBoxFor(m => m.FatherName, new { @class = "form-control", placeholder = "Father Name" })
                                </div>
                            </div>
                            <div class="col-sm-6">
                                <div class="form-group">
                                    <label>Husband Name </label>
                                    @Html.TextBoxFor(m => m.HusbandName, new { @class = "form-control", placeholder = "Husband Name" })
                                </div>
                            </div>
                            <div class="col-sm-6">
                                <div class="form-group">
                                    <label>Full Name <span class='required'>*</span></label>
                                    @Html.TextBoxFor(m => m.FullName, new { @class = "form-control", placeholder = "Full Name" })
                                </div>
                            </div>
                            <div class="col-sm-6">
                                <div class="form-group">
                                    <label>Email<span class='required'>*</span></label>
                                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control", placeholder = "Email" })
                                </div>
                            </div>

                            <div class="col-sm-6">
                                <div class="form-group">
                                    <label>Mobile No<span class='required'>*</span></label>
                                    @Html.TextBoxFor(m => m.MobileNo, new { @class = "form-control", placeholder = "Mobile No" })
                                </div>
                            </div>
                            <div class="col-sm-6">
                                <div class="form-group">
                                    <label>Conatct Info</label>
                                    @Html.TextBoxFor(m => m.ConatctInfo, new { @class = "form-control", placeholder = "Conatct Info" })
                                </div>
                            </div>
                            <div class="col-sm-6">
                                <div class="form-group">
                                    <label>CNIC</label>
                                    @Html.TextBoxFor(m => m.CNIC, new { @class = "form-control", placeholder = "Cnic" })
                                </div>
                            </div>
                            <div class="col-sm-6">
                                <div class="form-group">
                                    <label>Marital Status</label>
                                    @Html.TextBoxFor(m => m.MaritalStatus, new { @class = "form-control", placeholder = "Martial Status" })
                                </div>
                            </div>
                            <div class="col-sm-6">
                                <div class="form-group">
                                    <label>Present Address</label>
                                    @Html.TextBoxFor(m => m.PresentAddress, new { @class = "form-control", placeholder = "Present Address" })
                                </div>
                            </div>
                            <div class="col-sm-6">
                                <div class="form-group">
                                    <label>Permanent Address</label>
                                    @Html.TextBoxFor(m => m.PermanentAddress, new { @class = "form-control", placeholder = "Permanent Address" })
                                </div>
                            </div>
                            <div class="col-sm-6">
                                <div class="form-group">
                                    <label>Gender<span class='required'>*</span></label>
                                </div>


                            </div>
                            <div class="col-sm-6">
                                <div class="form-group">
                                    <label class="control-label"> Date Of Birth</label>
                                    <div id="datetimepicker1" class="input-group date">
                                        @Html.TextBoxFor(m => m.DateOfBirth, new { @class = "form-control", @id = "ExpectedDateOfJoining" })
                                        <span class="input-group-addon">
                                            <span class="fa fa-calendar"></span>
                                        </span>
                                    </div>
                                </div>
                            </div>

                            <div class="col-sm-12" style="margin-top:20px">
                                <div class="form-group" style="text-align: center;">

                                    <input type="submit" class="btn btn-sm btn-primary btn-employee" value="Save" />
                                </div>
                            </div>
                        </fieldset>


                        <h4 class="genCls" id="cls_2">
                            Profile
                            <br>
                            <small>Nam egestas, leo eu gravida tincidunt</small>
                        </h4>
                        <fieldset class="genCls" id="fcls_2">
                            <div class="col-sm-6">
                                <div class="form-group">
                                    <label>Short Summary</label>
                                    @Html.TextBoxFor(m => m.ShortSummary, new { @class = "form-control", placeholder = "Short Summary" })
                                </div>
                            </div>
                            <div class="col-sm-6">
                                <div class="form-group">
                                    <label>ICE Contact Info</label>
                                    @Html.TextBoxFor(m => m.ICEContactInfo, new { @class = "form-control", placeholder = "ICE Contact Info" })
                                </div>
                            </div>
                            <div class="col-sm-6">
                                <div class="form-group" style="margin-top: 22px;">
                                    <div class="checkbox c-checkbox needsclick">
                                        <label class="needsclick" style="font-weight: bold; padding-left: 0px;">
                                            <input type="checkbox" value="" class="needsclick">
                                            Is Disable  <span class="fa fa-check" style="margin-left: 12px;"></span>
                                        </label>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-6">
                                <div class="form-group">
                                    <label>Disable Detail</label>
                                    @Html.TextBoxFor(m => m.DisableDetail, new { @class = "form-control", placeholder = "Disable Detail" })
                                </div>
                            </div>

                            <div class="col-sm-6">
                                <div class="form-group">
                                    <label>HR Remarks</label>
                                    @Html.TextBoxFor(m => m.HRRemarks, new { @class = "form-control", placeholder = "Permanent Address" })
                                </div>
                            </div>
                            <div class="col-sm-6">
                                <div class="form-group">
                                    <label>Years Of Experience</label>
                                    @Html.TextBoxFor(m => m.NoYearsOfExperience, new { @class = "form-control", placeholder = "Permanent Address" })
                                </div>
                            </div>
                            <div class="col-sm-6">
                                <div class="form-group">
                                    <label>Start Salary</label>
                                    @Html.TextBoxFor(m => m.StartSalary, new { @class = "form-control", placeholder = "Permanent Address" })
                                </div>
                            </div>
                            <div class="col-sm-6">
                                <div>
                                    <div class="form-group">
                                        <label>Reference Name</label>
                                        @Html.TextBoxFor(m => m.ReferenceName, new { @class = "form-control", placeholder = "Reference Name" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-6">
                                <div class="form-group">
                                    <label>Reference Email</label>
                                    @Html.TextBoxFor(m => m.ReferenceEmail, new { @class = "form-control", placeholder = "Reference Email" })
                                </div>
                            </div>
                            <div class="col-sm-6">
                                <div class="form-group">
                                    <label>Date Of Joining</label>
                                    <div id="datetimepicker1_1" class="input-group date" style="">

                                        @Html.TextBoxFor(m => m.DateOfJoining, new { @class = "form-control", placeholder = "Date Of Joining" })
                                        @*<input type="text" name="end_date" value="" id="end_date" class="form-control " required="required">*@
                                        <span class="input-group-addon"> <span class="fa fa-calendar"></span> </span>
                                    </div>
                                </div>
                            </div>
                            
                            <div class="col-sm-6">
                                <div class="form-group">
                                    <label>Manager</label>
                                    @Html.DropDownListFor(m => m.ManagerId, ViewBag.EmployeeList as SelectList, "--Please Select Manager Name--", new { @class = "form-control", placeholder = "Manager Name" })
                                   
                                    @*@Html.TextBoxFor(m => m.ManagerId, new { @class = "form-control", placeholder = "Manager" })*@
                                </div>
                            </div>
                            <div class="col-sm-6">
                                <div class="form-group">
                                    <label>Employee Type</label>
                                    @* @Html.TextBoxFor(m => m.LookEmployeeTypeId, new { @class = "form-control", placeholder = "Permanent Address" })*@
                                    @Html.DropDownListFor(m => m.LookEmployeeTypeId, Model.getEmployeeType(), "--Please Select Employee Type--", new { @class = "form-control", placeholder = "Department Name" })


                                </div>
                            </div>
                            <div class="col-sm-6">
                                <div class="form-group">
                                    <label>Department</label>
                                    @* @Html.TextBoxFor(m => m.LookDepartmentId, new { @class = "form-control", placeholder = "Permanent Address" })*@
                                    @Html.DropDownListFor(m => m.LookDepartmentId, Model.getDepartment(), "--Please Select Department Name--", new { @class = "form-control", placeholder = "Department Name" })
                                </div>
                            </div>
                            <div class="col-sm-6">
                                <div class="form-group">
                                    <label>Current Job Title</label>
                                    @Html.DropDownListFor(m => m.LookDesignationId, Model.getDesignation(), "--Please Select Designaton Type--", new { @class = "form-control", placeholder = "Department Name" })
                                </div>
                            </div>
                            <div class="col-sm-6">
                                <div class="form-group">
                                    <label>Exit Date</label>
                                    <div id="datetimepicker1_2" class="input-group date" style="">
                                        @Html.TextBoxFor(m => m.ExitDate, new { @class = "form-control", placeholder = "Exit Date" })
                                        @*<input type="text" name="end_date" value="" id="end_date" class="form-control " required="required">*@
                                        <span class="input-group-addon"> <span class="fa fa-calendar"></span> </span>
                                    </div>
                                </div>
                            </div>

                            <div class="col-sm-12" style="margin-top:20px">
                                <div class="form-group" style="text-align: center;">
                                    @Html.HiddenFor(m => m.EmployeeId, new { @id = "EmployeeId" })
                                    @Html.HiddenFor(m => m.EmployeeGuid, new { @id = "EmployeeGuid" })                                    
                                    <input type="submit" class="btn btn-sm btn-primary btn-employee" value="Save" />

                                </div>
                            </div>
                        </fieldset>
                        <h4 class="genCls" id="cls_3">
                            Education
                            <br>
                            @*<small>Nam egestas, leo eu gravida tincidunt</small>*@
                            <span class="sp-div-emp" style="color:red">below content is not editable </span>
                        </h4>
                        <fieldset class="genCls div-emp" id="fcls_3">
                            @* <p class="lead text-center">Almost there!</p>*@



                            <div id="QualificationContainer">
                                <div>

                                    <div id="qualification">

                                        <div class="col-sm-3">
                                            <div class="form-group">
                                                <label>Qualification</label>
                                                <a class="pull-right" data-toggle="modal" data-target="#QualificationModal" style="cursor:pointer">Add another...</a>
                                            </div>
                                        </div>
                                        <div class="col-sm-3">
                                            <div class="form-group">
                                                <label>Education Year</label>
                                            </div>
                                        </div>
                                        <div class="col-sm-3">
                                            <div class="form-group">
                                                <label>Institution Name</label>
                                                <a class="pull-right" data-toggle="modal" data-target="#InstitutionModal" style="cursor:pointer">Add another...</a>
                                            </div>
                                        </div>
                                        <div class="col-sm-3">
                                            <div class="form-group">
                                                <label>Grade</label>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                @if (Model.EmployeeEducationList.IsNotNull())
                                {

                                    foreach (var education in Model.EmployeeEducationList)
                                    {

                                        <div id="qualicationNo-@educationCount" style='margin-top:20px' class='col-sm-12  right-padding-0 left-padding-0'>


                                            <div class="col-sm-3">
                                                <div class="form-group">
                                                    @Html.DropDownListFor(m => education.LookQualificationId, Model.getQualification(), new { @class = "form-control QualificationType", placeholder = "Short Summary" })
                                                </div>
                                                <div id="failvalidation">
                                                </div>
                                            </div>
                                            <div class="col-sm-3">
                                                <div class="form-group">
                                                    @Html.TextBoxFor(m => education.EducationYear, new { @class = "form-control Year abc", placeholder = "Short Summary" })
                                                </div>
                                            </div>
                                            <div class="col-sm-3">
                                                <div class="form-group">
                                                    @Html.DropDownListFor(m => education.LookInstitutionId, Model.getInstitution(), new { @class = "form-control Institute", placeholder = "Short Summary" })
                                                </div>
                                            </div>
                                            <div class="col-sm-2">
                                                <div class="form-group">
                                                    @Html.TextBoxFor(m => education.Grade, new { @class = "form-control Grades", placeholder = "Short Summary" })
                                                </div>
                                            </div>
                                            <div class="col-sm-1 left-padding-0">
                                                <div class="form-group">
                                                    <em class="form-control delete_record icon-close" title="Delete Education" style="font-size:18px;color:red; border: none; cursor:pointer" rel="51"></em>
                                                </div>
                                            </div>

                                        </div>
                                        educationCount++;
                                    }
                                }
                                else
                                {
                                    <div id="qualicationNo-0" style='margin-top:20px' class='col-sm-12  right-padding-0 left-padding-0'>



                                        <div class="col-sm-3">
                                            <div class="form-group">
                                                @Html.DropDownListFor(m => m.EmployeeEducation.LookQualificationId, Model.getQualification(), new { @class = "form-control QualificationType", placeholder = "Short Summary" })
                                            </div>
                                        </div>
                                        <div class="col-sm-3">
                                            <div class="form-group">
                                                @Html.TextBoxFor(m => m.EmployeeEducation.EducationYear, new { @class = "form-control Year", placeholder = "Short Summary" })
                                            </div>
                                        </div>
                                        <div class="col-sm-3">
                                            <div class="form-group">
                                                @Html.DropDownListFor(m => m.EmployeeEducation.LookInstitutionId, Model.getInstitution(), new { @class = "form-control Institute", placeholder = "Short Summary" })
                                            </div>
                                        </div>
                                        <div class="col-sm-2">
                                            <div class="form-group">
                                                @Html.TextBoxFor(m => m.EmployeeEducation.Grade, new { @class = "form-control Grades", placeholder = "Short Summary" })
                                            </div>
                                        </div>
                                        <div class="col-sm-1 left-padding-0">
                                            <div class="form-group">
                                                <em class="form-control delete_record icon-close" title="Delete Education" style="font-size:18px;color:red; border: none; cursor:pointer" rel="51"></em>
                                            </div>
                                        </div>

                                    </div>
                                }
                            </div>

                            <div class="col-sm-12">
                                <input type="button" style="margin-top:10px; float:right" class="btn btn-sm btn-primary" value="Add More" id="moreQualification" />
                            </div>
                            <div class="col-sm-12">

                                <div class="form-group" style="text-align: center;">
                                    @Html.HiddenFor(m => m.EmployeeId)
                                    <input type="button" style="margin-top:10px" onclick="AddQualification()" class="btn btn-sm btn-primary btn-employee" value="Save" id="btnAjax" />

                                </div>
                            </div>


                        </fieldset>
                        <h4 class="genCls" id="cls_4">
                            Experience
                            <br>
                            @*<small>Nam egestas, leo eu gravida tincidunt</small>*@
                            <span class="sp-div-emp" style="color:red">below content is not editable </span>
                        </h4>
                        <fieldset class="genCls div-emp" id="fcls_4">
                            @* <p class="lead text-center">Almost there!</p>*@
                            <div id="ExperienceContainer">
                                <div>

                                    <div class="col-sm-2">
                                        <div class="form-group">
                                            <label>Organization</label>
                                            <a class="pull-right" data-toggle="modal" data-target="#OrganizationModal" style="cursor:pointer">Add another...</a>
                                        </div>
                                    </div>
                                    <div class="col-sm-3">
                                        <div class="form-group">
                                            <label>To Date</label>
                                        </div>
                                    </div>
                                    <div class="col-sm-3">
                                        <div class="form-group">
                                            <label>From Date</label>
                                        </div>
                                    </div>
                                    <div class="col-sm-2">
                                        <div class="form-group">
                                            <label>Job Title</label>
                                        </div>
                                    </div>
                                    <div class="col-sm-2">
                                        <div class="form-group">
                                            <label>Salary</label>
                                        </div>
                                    </div>
                                </div>
                                @if (Model.EmployeeEducationList.IsNotNull())
                                {


                                    foreach (var experience in Model.EmployeeExperienceHistoryList)
                                    {
                                        <div id="experienceNo-@experienceCount" style='margin-top:20px' class='col-sm-12  right-padding-0 left-padding-0'>

                                            <div class="col-sm-2 lr-padding-0">
                                                <div class="form-group lr-padding-0">
                                                    @*<label>Organization</label>*@
                                                    @Html.DropDownListFor(m => experience.LookOrganizationId, Model.getOrganization(), new { @class = "form-control Organization", placeholder = "Short Summary" })
                                                </div>
                                            </div>
                                            <div class="col-sm-3 lr-padding-0">
                                                <div class="form-group lr-padding-0">
                                                    <div id="datetimepicker1_4" class="input-group date">
                                                        @Html.TextBoxFor(m => experience.FromDate, new { @class = "form-control FromDate", placeholder = "From Date" })
                                                        <span class="input-group-addon"> <span class="fa fa-calendar"></span> </span>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-sm-3 lr-padding-0">
                                                <div class="form-group lr-padding-0">
                                                    <div id="datetimepicker1_3" class="input-group date">
                                                        @Html.TextBoxFor(m => experience.ToDate, new { @class = "form-control ToDate", placeholder = "To Date" })
                                                        <span class="input-group-addon"> <span class="fa fa-calendar"></span> </span>
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="col-sm-2 lr-padding-0">
                                                <div class="form-group lr-padding-0">
                                                    @Html.TextBoxFor(m => experience.JobTitle, new { @class = "form-control JobTitle", placeholder = "Job Title" })
                                                </div>
                                            </div>
                                            <div class="col-sm-2 lr-padding-0">
                                                <div class="col-sm-9 lr-padding-0">
                                                    <div class="form-group">
                                                        @Html.TextBoxFor(m => experience.Salary, new { @class = "form-control Salary", placeholder = "Salary" })
                                                    </div>
                                                </div>
                                                <div class="col-sm-3 left-padding-0">
                                                    <div class="form-group">
                                                        <em class="form-control delete_record icon-close" title="Delete Experience" style="font-size:18px;color:red; border: none; cursor:pointer" rel="51"></em>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        experienceCount++;
                                    }
                                }
                                else
                                {
                                    <div id="experienceNo-@experienceCount" style='margin-top:20px' class='col-sm-12  right-padding-0 left-padding-0'>

                                        <div class="col-sm-2 lr-padding-0">
                                            <div class="form-group lr-padding-0">

                                                @Html.DropDownListFor(m => m.EmployeeExperienceHistory.LookOrganizationId, Model.getOrganization(), new { @class = "form-control Organization", placeholder = "Short Summary" })
                                            </div>
                                        </div>
                                        <div class="col-sm-3 lr-padding-0">
                                            <div class="form-group lr-padding-0">
                                                <div id="datetimepicker1_4" class="input-group date" style="">
                                                    @Html.TextBoxFor(m => m.EmployeeExperienceHistory.FromDate, new { @class = "form-control FromDate", placeholder = "From Date" })
                                                    <span class="input-group-addon"> <span class="fa fa-calendar"></span> </span>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-sm-3 lr-padding-0">
                                            <div class="form-group lr-padding-0">
                                                <div id="datetimepicker1_3" class="input-group date" style="">
                                                    @Html.TextBoxFor(m => m.EmployeeExperienceHistory.ToDate, new { @class = "form-control ToDate", placeholder = "To Date" })
                                                    <span class="input-group-addon"> <span class="fa fa-calendar"></span> </span>
                                                </div>
                                            </div>
                                        </div>

                                        <div class="col-sm-2 lr-padding-0">
                                            <div class="form-group lr-padding-0">

                                                @Html.TextBoxFor(m => m.EmployeeExperienceHistory.JobTitle, new { @class = "form-control JobTitle", placeholder = "Job Title" })
                                            </div>
                                        </div>


                                        <div class="col-sm-2 lr-padding-0">
                                            <div class="col-sm-9 lr-padding-0">
                                                <div class="form-group">
                                                    @Html.TextBoxFor(m => m.EmployeeExperienceHistory.Salary, new { @class = "form-control Salary", placeholder = "Salary" })
                                                </div>
                                            </div>
                                            <div class="col-sm-3 left-padding-0">
                                                <div class="form-group">
                                                    <em class="form-control delete_record icon-close" title="Delete Experince" style="font-size:18px;color:red; border: none; cursor:pointer" rel="51"></em>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>

                            <div class="col-sm-12">
                                <input type="button" style="margin-top:10px; float:right" class="btn btn-sm btn-primary" value="Add More" id="moreExperience" />
                            </div>
                            <div class="col-sm-12">
                                <div class="form-group" style="text-align: center;">
                                    <input type="button" style="margin-top:10px" class="btn btn-sm btn-primary btn-employee" value="Save" id="btnExperience" />
                                </div>
                            </div>



                        </fieldset>


                        <h4 class="genCls" id="cls_5">
                            Dependents
                            <br>
                            @*<small>Nam egestas, leo eu gravida tincidunt</small>*@
                            <span class="sp-div-emp" style="color:red">below content is not editable </span>
                        </h4>
                        <fieldset class="genCls div-emp" id="fcls_5">

                            <div id="DependentContainer">

                                <div>
                                    <div>
                                        <div class="col-sm-4">
                                            <div class="form-group">
                                                <label>Name<span class='required'>*</span></label>
                                            </div>
                                        </div>
                                        <div class="col-sm-4">
                                            <div class="form-group">
                                                <label>Relation</label>

                                            </div>
                                        </div>
                                        <div class="col-sm-3">
                                            <div class="form-group">
                                                <label>Gender<span class='required'>*</span></label>

                                            </div>
                                        </div>
                                        <div class="col-sm-1 left-padding-0">
                                        </div>

                                    </div>
                                </div>

                                @if (Model.EmployeeDependentList.IsNotNull())
                                {
                                    foreach (var dependents in Model.EmployeeDependentList)
                                    {
                                        <div id="dependentNo-@dependentsCount" style='margin-top:20px' class='col-sm-12  right-padding-0 left-padding-0'>

                                            <div class="col-sm-4">
                                                <div class="form-group">
                                                    @Html.TextBoxFor(m => dependents.Name, new { @class = "form-control Name", placeholder = "First Name" })
                                                </div>
                                            </div>
                                            <div class="col-sm-4">
                                                <div class="form-group">
                                                    @Html.TextBoxFor(m => dependents.Relation, new { @class = "form-control Relation", placeholder = "Last Name" })

                                                </div>
                                            </div>
                                            <div class="col-sm-3">
                                                <div class="form-group">
                                                    @* @Html.RadioButtonFor(m => dependents.Gender, new { @class = "form-control", placeholder = "Gender" })*@
                                                    @*  @Html.RadioButtonFor(x => x.EmployeeDependents.Gender, "M",new { @class = "form-control Gender" })*@

                                                    <select class="form-control" data-val="true" data-val-number="The field LookDesignationId must be a number." id="EmployeeDependents_Gender" name="EmployeeDependents.Gender" placeholder="M,F,N">
                                                        <option value="">--Please Select M,F, N --</option>
                                                        <option value="M">M</option>
                                                        <option value="F">F</option>
                                                        <option value="N">N</option>
                                                    </select>

                                                </div>
                                            </div>
                                            <div class="col-sm-1 left-padding-0">
                                                <div class="form-group">
                                                    <em class="form-control delete_record icon-close" title="Delete Education" style="font-size:18px;color:red; border: none; cursor:pointer" rel="51"></em>
                                                </div>
                                            </div>


                                        </div>
                                        dependentsCount++;
                                    }
                                }
                                else
                                {
                                    <div id="dependentNo-0" style='margin-top:20px' class='col-sm-12  right-padding-0 left-padding-0'>

                                        <div class="col-sm-4">
                                            <div class="form-group">
                                                @Html.TextBoxFor(m => m.EmployeesDependent.Name, new { @class = "form-control Name", placeholder = "First Name" })
                                            </div>
                                        </div>
                                        <div class="col-sm-4">
                                            <div class="form-group">
                                                @Html.TextBoxFor(m => m.EmployeesDependent.Relation, new { @class = "form-control Relation", placeholder = "Last Name" })

                                            </div>
                                        </div>
                                        <div class="col-sm-3">
                                            <div class="form-group">
                                                @* @Html.RadioButtonFor(m => dependents.Gender, new { @class = "form-control", placeholder = "Gender" })*@
                                                @*  @Html.RadioButtonFor(x => x.EmployeeDependents.Gender, "M",new { @class = "form-control Gender" })*@

                                                <select class="form-control" data-val="true" data-val-number="The field LookDesignationId must be a number." id="EmployeeDependents_Gender" name="EmployeeDependents.Gender" placeholder="M,F,N">
                                                    <option value="">--Please Select M,F, N --</option>
                                                    <option value="M">M</option>
                                                    <option value="F">F</option>
                                                    <option value="N">N</option>
                                                </select>

                                            </div>
                                        </div>
                                        <div class="col-sm-1 left-padding-0">
                                            <div class="form-group">
                                                <em class="form-control delete_record icon-close" title="Delete Education" style="font-size:18px;color:red; border: none; cursor:pointer" rel="51"></em>
                                            </div>
                                        </div>

                                    </div>
                               }
                            </div>
                            <div class="col-sm-12">
                                <input type="button" style="margin-top:10px; float:right" class="btn btn-sm btn-primary" value="Add More" id="moreDependent" />
                            </div>
                            <div class="col-sm-12">
                                <div class="form-group" style="text-align: center;">
                                    <input type="button" style="margin-top:10px" class="btn btn-sm btn-primary btn-employee" value="Save" id="btnDependent" />
                                </div>
                            </div>
                        </fieldset>
                        <h4 class="genCls" id="cls_6">
                            Employee Attachement
                            <br>
                            @*//<small>Add Bio data</small>*@
                            <span class="sp-div-emp" style="color:red">below content is not editable </span>
                        </h4>



                        <fieldset class="genCls div-emp" id="fcls_6">
                            @if (Model.EmployeeAttachmentList.IsNotNull())
                            {
                                <div class="col-sm-12">
                                    <div class="container">
                                        <table class="table table-bordered">
                                            <thead>
                                                <tr>
                                                    <th>Employee Attachment</th>
                                                    <th>Actions</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @foreach (var item in Model.EmployeeAttachmentList)
                                                {
                                                    var Attachment = @System.Configuration.ConfigurationManager.AppSettings["UploadEmployee"] + item.AttachmentPath;

                                                    <tr>
                                                        <td>
                                                            @if (item.AttachmentPath.IsNotNullOrEmpty())
                                                            {
                                                                <a href="@Attachment" target="_blank" style=" margin-left:5px">
                                                                    <span>@item.AttachmentTitle</span>
                                                                </a>
                                                            }
                                                        </td>
                                                        <td><em class="delete_record icon-close" title="Delete Attachment" style="font-size:18px;color:red" rel="51"></em></td>
                                                    </tr>
                                                }
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            }

                            <div id="AttachmentContainer">
                                <div id="attachmentNo-0">

                                    <div class="col-sm-6">
                                        <div class="form-group">
                                            <label>Please Attach File</label>
                                            @if (Model.Resume.IsNotNullOrEmpty())
                                            {
                                                var Resume = @System.Configuration.ConfigurationManager.AppSettings["UploadApplicantPath"] + Model.Resume;
                                                <a href="@Resume" target="_blank" style="float: right;">
                                                    <span>Resume</span>
                                                </a>
                                            }
                                            @Html.TextBox("Resume", "", new { @class = "form-control", @type = "file", accept = ".doc,.docx,.xml,application/pdf,application/msword,application/vnd.openxmlformats-officedocument.wordprocessingml.document" })
                                        </div>
                                    </div>

                                </div>
                            </div>



                            <div class="col-sm-12">
                                <input type="button" style="margin-top:10px; float:right" class="btn btn-sm btn-primary" value="Add More" id="moreAttachment" />
                            </div>
                            <div class="col-sm-12">
                                <div class="form-group" style="text-align: center;">
                                    <input type="button" style="margin-top:10px" class="btn btn-sm btn-primary btn-employee" value="Save" id="Upload" />
                                </div>
                            </div>


                        </fieldset>


                        <h4 class="genCls" id="cls_7">
                            7. HR
                            <br>
                            <small>Add Employee Policy</small>                  
                        </h4>
                        <fieldset class="genCls" id="fcls_7">
                            @if (Model.LookPolicyList.IsNotNull())
                            {
                                <div class="col-sm-10">
                                    @*<div class="container">*@
                                    <table class="table table-bordered">
                                        <thead>
                                            <tr>
                                                <th>PolicyName</th>
                                                <th>PolicyValue</th>
                                                <th>EmployeeValue</th>
                                                <th>Unit</th>
                                                <th>Actions</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @{
                                                int counter = 0;
                                                foreach (var item in Model.LookPolicyList)
                                                {
                                                    <tr id="row_@counter">
                                                        <td>@item.PolicyName</td>
                                                        <td>@item.PolicyValue</td>
                                                        @if(item.PolicyName== "Day Start Time" || item.PolicyName== "Day End Time")
                                                        {
                                                         <td><input type="text" id="EmployeePolicyValue_@counter" name="EmployeePolicyValue" value="@item.EmployeePolicyValue"  class="form-control Time" style="width:200px;"/></td>
                                                        }
                                                        else
                                                        {
                                                        <td><input type="number" id="EmployeePolicyValue_@counter" name="EmployeePolicyValue" value="@item.EmployeePolicyValue"  class="form-control" style="width:200px;"/></td>
                                                        }
                                                        <td>@item.PolicyUnit</td>
                                                        <td><input type="button" id="PolicyId" value="Update" rel="@counter" class="updatePolicy" employeePolicyId="@item.EmployeePolicyId" policyId="@item.LookPolicyId" policyName="@item.PolicyName" policyUnit="@item.PolicyUnit" policyValue="@item.PolicyValue" lookPolicyGroupId="@item.LookPolicyGroupId"></td>
                                                    </tr>
                                                    counter++;
                                                }
                                            }
                                        </tbody>
                                    </table>                             
                                </div>
                                                }
                        </fieldset>
                    </div>
                                                }           
            </div>
        </div>
    </div>
    <div id="QualificationModal" class="modal fade" role="dialog">
        <div class="modal-dialog">

            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Add more education programs</h4>
                </div>
                <div class="modal-body">
                    <div>
                        <label>Profession Name<span class="required" aria-required="true">*</span></label>
                        @*  @Html.DropDownList("LookQualificationTypeId", ViewBag.QualificationType as SelectList, new { @class = "form-control", placeholder = "Qualification", id = "LookQualificationTypeId" })*@
                        @Html.DropDownListFor(m => m.LookQualificationTypeId, Model.getQualificationType(), new { @class = "form-control", placeholder = "Department Name" })


                    </div>
                    <div class="form-group">
                        <label>Qualification Name<span class="required" aria-required="true">*</span></label>
                        <input class="form-control" id="QualificationName" name="QualificationName" placeholder="Qualification Name" type="text" value="">
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" onclick="AddQualification()" class="btn btn-primary" data-dismiss="modal">Save</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>

    </div>
    <div id="OrganizationModal" class="modal fade" role="dialog">
        <div class="modal-dialog">

            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Add organizations</h4>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        <label>Organization Name<span class="required" aria-required="true">*</span></label>
                        <input class="form-control" id="OrganizationName" name="OrganizationName" placeholder="Organization Name" type="text" value="">
                    </div>

                    <div class="form-group">
                        <label>Organization URL<span class="required" aria-required="true">*</span></label>
                        <input class="form-control" id="OrganizationURL" name="OrganizationURL" placeholder="Organization URL" type="text" value="">
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" onclick="AddOrganization()" class="btn btn-primary" data-dismiss="modal">Save</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>

    </div>
    <div id="InstitutionModal" class="modal fade" role="dialog">
        <div class="modal-dialog">

            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Add Institution</h4>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        <label>Institution Name<span class="required" aria-required="true">*</span></label>
                        <input class="form-control" id="InstitutionName" name="InstitutionName" placeholder="Institution Name" type="text" value="">
                    </div>

                </div>
            </div>
            <div class="modal-footer">
                <button type="button" onclick="AddInstitution()" class="btn btn-primary" data-dismiss="modal">Save</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>

    </div>
</section>

<script type="text/javascript">
    debugger;
    var qualificationHtml = null;
    qualificationHtml = $('#qualicationNo-0').html();
    var qualificationCount = 1;
    var experienceHtml = null;
    experienceHtml = $('#experienceNo-0').html();
    var experienceCount = 1;
    var dependentHtml = null;
    dependentHtml = $('#dependentNo-0').html();
    var dependentCount = @dependentsCount;
    if(dependentCount==0) 
        var dependentCount=1;
    var attachmentHtml = $('#attachmentNo-0').html();
    var attachmentCount = 1;
    var resume = 0;
    //var input = $('[name="FirstName"],[name="LastName"]'),
    //input1 = $('#FirstName'),
    //input2 = $('#LastName'),
    //input3 = $('#FullName');
    //input.change(function () {
    //    input3.val(input1.val() + ' ' + input2.val());
    //});

    $(document).ready(function () {
        debugger;
        $("#Gender").val("@Model.Gender".trim());
        var employeeId = $("#EmployeeId").val();
        $(".genCls").hide();
        $("#cls_1" ).show();
        $("#fcls_1").show();
        $(".Time").mask("99:99:99", {});         	
        $(".first").bind( "click");
        if(employeeId>0)
        {
            $(".div-emp").removeClass( "div-none");
            $(".sp-div-emp").hide();
        }
        else{
            $(".div-emp").addClass( "div-none");
            $(".sp-div-emp").show();
        }


        $(document).off("click", ".first").on("click", ".first", function (event) {
            //event.preventDefault();
            debugger;
            var cc = $(this).attr('rel');          
            $(".genCls").hide();
            $("#cls_" + cc).show();
            $("#fcls_" + cc).show();
            $(this).addClass("current");
            $(".first").removeClass("current");
            $(this).addClass("current");

        });

        $('#moreQualification').click(function () {
            var newHtml = "";
            debugger;
            //if (qualificationHtml == null) {
            //    qualificationHtml = $('#qualification').html();
            //}
            newHtml = "  <div id='qualicationNo-" + qualificationCount + "'  style='margin-top:20px'  class='col-sm-12  right-padding-0 left-padding-0'>" + qualificationHtml + "</div>";
            $('#QualificationContainer').append(newHtml);
            $('#qualicationNo-' + qualificationCount + ' #education_EducationYear').val('');
            $('#qualicationNo-' + qualificationCount + ' #education_Grade').val('');
            qualificationCount++;

        });
        // first
        $('#btnAjax').click(function () {
            debugger;
            var obj = [];
            var newObj = new Object();
            var EmployeeEducationViewModel = new Object();
            obj[0] = newObj;
            var employeeId = $("#EmployeeId").val();
            var check_validate = validate_adduser();
            if (check_validate == false) {
                return;
            }
            EmployeeEducationViewModel.EmployeeId = employeeId;
            for (var i = 0; i < qualificationCount; i++) {
                var newQualification = new Object();
                newQualification.EmployeeId = employeeId;
                newQualification.LookQualificationId = $("#qualicationNo-" + i + " .QualificationType").val();
                newQualification.EducationYear = $("#qualicationNo-" + i + " .Year").val();
                newQualification.LookInstitutionId = $("#qualicationNo-" + i + " .Institute").val();
                newQualification.Grade = $("#qualicationNo-" + i + " .Grades").val();
                obj[i] = newQualification;
            }
            var qualifications = obj;
            EmployeeEducationViewModel.EmployeeEducation = obj
            $.ajax({
                url: '/Employee/CreateEducation',
                type: 'POST',
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify(EmployeeEducationViewModel),
                success: function (response) {
                    debugger;
                    alert(response)
                },
                error: function (response) {
                    debugger;
                    alert("error")
                }
            });
        });

        $('.updatePolicy').click(function () {
            debugger;
            //var obj=[];
            var LookPolicyViewModel = new Object();
            var employeeId = $("#EmployeeId").val();
            var policyId=$(this).attr('policyId');            
            var employeePlocyId=$(this).attr('employeePolicyId');
            var row_id=$(this).attr('rel');
            var newpolicyValue=$('#EmployeePolicyValue_'+row_id).val();

            var lookPolicyGroupId=$(this).attr('lookPolicyGroupId');
            var policyName=$(this).attr('policyName');
            var policyUnit=$(this).attr('policyUnit');
            var policyValue=$(this).attr('policyValue');
            

            LookPolicyViewModel.LookPolicyId=policyId;
            LookPolicyViewModel.EmployeePolicyId=employeePlocyId;
            LookPolicyViewModel.EmployeePolicyValue=newpolicyValue;
            LookPolicyViewModel.LookPolicyGroupId = lookPolicyGroupId;
            LookPolicyViewModel.PolicyName=policyName;
            LookPolicyViewModel.PolicyUnit=policyUnit;
            LookPolicyViewModel.PolicyValue=policyValue;
            LookPolicyViewModel.EmployeeId=employeeId;
                
            // LookPolicyViewModel.PolicyName=
            //obj[0] = newObj;
            var employeeId = $("#EmployeeId").val();
            //var check_validate = validate_adduser();
            //if (check_validate == false) {
            //    return;
            //}
            //LookPolicyViewModel.EmployeeId = employeeId;
            //var qualifications = obj;
            //LookPolicyViewModel = obj
            $.ajax({
                url: '/Employee/UpdateEmployeePolicy',
                type: 'POST',
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify(LookPolicyViewModel),
                success: function (response) {
                    debugger;
                    alert(response)
                },
                error: function (response) {
                    debugger;
                    alert("error")
                }
            });
        });



        $('#moreExperience').click(function () {
            var newHtml = "";
            debugger;
            var fromdate = "datetimepicker1_3";
            var newfromdate = "datetimepicker1_3_" + experienceCount;
            var todate = "datetimepicker1_4";
            var newTodate = "datetimepicker1_4_" + experienceCount;
            experienceHtml = experienceHtml.replace(fromdate, newfromdate);
            experienceHtml = experienceHtml.replace(todate, newTodate);
            newHtml = "  <div id='experienceNo-" + experienceCount + "' style='margin-top:20px' class='col-sm-12 right-padding-0 left-padding-0'>" + experienceHtml + "</div>";
            $('#ExperienceContainer').append(newHtml);
            $('#experienceNo-' + experienceCount + ' #experience_FromDate').val('');
            $('#experienceNo-' + experienceCount + ' #experience_ToDate').val('');
            $('#experienceNo-' + experienceCount + ' #experience_JobTitle').val('');
            $('#experienceNo-' + experienceCount + ' #experience_Salary').val('');
            experienceCount++;
            $('#' + newfromdate).datetimepicker({
                icons: {
                    time: 'fa fa-clock-o',
                    date: 'fa fa-calendar',
                    up: 'fa fa-chevron-up',
                    down: 'fa fa-chevron-down',
                    previous: 'fa fa-chevron-left',
                    next: 'fa fa-chevron-right',
                    today: 'fa fa-crosshairs',
                    clear: 'fa fa-trash'
                }
            });
            $('#' + newTodate).datetimepicker({
                icons: {
                    time: 'fa fa-clock-o',
                    date: 'fa fa-calendar',
                    up: 'fa fa-chevron-up',
                    down: 'fa fa-chevron-down',
                    previous: 'fa fa-chevron-left',
                    next: 'fa fa-chevron-right',
                    today: 'fa fa-crosshairs',
                    clear: 'fa fa-trash'
                }
            });
        });


        $('#btnExperience').click(function () {
            debugger;
            var obj = [];
            var newObj = new Object();
            var EmployeeExperienceViewModel = new Object();
            obj[0] = newObj;
            var employeeId = $("#EmployeeId").val();
            var check_validate = validate_adduser();
            if (check_validate == false) {
                return;
            }
            EmployeeExperienceViewModel.EmployeeId = employeeId;
            for (var i = 0; i < experienceCount; i++) {
                var newQualification = new Object();
                newQualification.EmployeeId = employeeId;
                newQualification.LookOrganizationId = $("#experienceNo-" + i + " .Organization").val();
                newQualification.ToDate = $("#experienceNo-" + i + " .ToDate").val();
                newQualification.FromDate = $("#experienceNo-" + i + " .FromDate").val();
                newQualification.JobTitle = $("#experienceNo-" + i + " .JobTitle").val();
                newQualification.Salary = $("#experienceNo-" + i + " .Salary").val();
                obj[i] = newQualification;
            }
            var qualifications = obj;
            EmployeeExperienceViewModel.EmployeeExperienceHistory = obj
            $.ajax({
                url: '/Employee/CreateExperience',
                type: 'POST',
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify(EmployeeExperienceViewModel),
                success: function (response) {
                    debugger;
                    alert(response)
                },
                error: function (response) {
                    debugger;
                    alert("error")
                }
            });
        });

        $('#moreDependent').click(function () {
            var newHtml = "";
            debugger;
            //if (dependentHtml == null) {
            //    dependentHtml = $('#dependent').html();
            //}
            newHtml = "  <div id='dependentNo-" + dependentCount + "'  style='margin-top:20px'  class='col-sm-12   right-padding-0 left-padding-0'>" + dependentHtml + "</div>";
            $('#DependentContainer').append(newHtml);
            $('#dependentNo-' + dependentCount + ' #dependents_Name').val('');
            $('#dependentNo-' + dependentCount + ' #dependents_Relation').val('');
            dependentCount++;

        });

        $('#btnDependent').click(function () {
            debugger;
            var obj = [];
            var newObj = new Object();
            var EmployeeDependentViewModel = new Object();
            obj[0] = newObj;
            var employeeId = $("#EmployeeId").val();
            var check_validate = validate_adduser();
            if (check_validate == false) {
                return;
            }
            EmployeeDependentViewModel.EmployeeId = employeeId;
            for (var i = 0; i < dependentCount; i++) {
                var newQualification = new Object();
                newQualification.EmployeeId = employeeId;
                newQualification.Name = $("#dependentNo-" + i + " .Name").val();
                newQualification.Relation = $("#dependentNo-" + i + " .Relation").val();
                newQualification.Gender = $("#dependentNo-" + i + " .Gender").val();
                obj[i] = newQualification;
            }
            var qualifications = obj;
            EmployeeDependentViewModel.EmployeesDependent = obj
            $.ajax({
                url: '/Employee/CreateDependent',
                type: 'POST',
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify(EmployeeDependentViewModel),
                success: function (response) {
                    debugger;
                    alert(response)
                },
                error: function (response) {
                    debugger;
                    alert("error")
                }
            });
        });

        $('#moreAttachment').click(function () {
            var newHtml = "";
            // debugger;
            //if (attachmentHtml == null) {
            //   attachmentHtml = $('#attachment').html();
            //}
            newHtml = "  <div id='attachmentNo-" + attachmentCount + "'>" + attachmentHtml + "</div>";
            newHtml = newHtml.replace('Resume', 'Resume_' + resume);//.replace('Resume', 'Resume_' + resume);
            resume++;
            $('#AttachmentContainer').append(newHtml);
        });


        //$('#btnDependent').click(function () {
        //    debugger;
        //    var obj = [];
        //    var newObj = new Object();
        //    var EmployeeDependentViewModel = new Object();
        //    obj[0] = newObj;
        //    var employeeId = $("#EmployeeId").val();
        //    var check_validate = validate_adduser();
        //    if (check_validate == false) {
        //        return;
        //    }
        //    EmployeeDependentViewModel.EmployeeId = employeeId;
        //    for (var i = 0; i < qualificationCount; i++) {
        //        var newQualification = new Object();
        //        newQualification.EmployeeId = employeeId;
        //        newQualification.Name = $("#dependentNo-" + i + " .Name").val();
        //        newQualification.Relation = $("#dependentNo-" + i + " .Relation").val();
        //        newQualification.Gender = $("#dependentNo-" + i + " .Gender").val();
        //        obj[i] = newQualification;
        //    }
        //    var qualifications = obj;
        //    EmployeeDependentViewModel.EmployeesDependent = obj
        //    $.ajax({
        //        url: '/Employee/CreateDependent',
        //        type: 'POST',
        //        dataType: "json",
        //        contentType: "application/json; charset=utf-8",
        //        data: JSON.stringify(EmployeeDependentViewModel),
        //        success: function (response) {
        //            debugger;
        //            alert(response)
        //        },
        //        error: function (response) {
        //            debugger;
        //            alert("error")
        //        }
        //    });
        //});

        $("#Upload").click(function () {
            debugger;
            var formData = new FormData();
            var totalFiles = document.getElementById("Resume").files.length;
            var employeeId = $("#EmployeeId").val();
            for (var i = -1; i < resume; i++) {
                if (i == -1) {
                    var file = document.getElementById("Resume").files[0];
                    formData.append("Resume", file);
                }
                else
                {
                    var file = document.getElementById("Resume_" + i).files[0];
                    formData.append("Resume_" + i, file);
                }
            }
            $.ajax({
                type: "POST",
                url: '/Employee/Upload?main_id='+employeeId,
                data: formData,
                dataType: 'json',
                contentType: false,
                processData: false,
                success: function (response) {
                    alert('succes!!');
                },
                error: function (error) {
                    alert("Failed");
                }
            });
        });


    });

    function AddQualification() {
        var program = new Object();
        program.LookQualificationTypeId = $("#LookQualificationTypeId").val();
        program.QualificationName = $("#QualificationName").val();
        $.ajax({
            url: '/Qualification/New',
            type: 'POST',
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify(program),
            success: function (response) {
                debugger;
                if (response.Data != null && response.ResultType == 1) {
                    var options = response.Data;
                    var other = "";
                    other = other + " <option value='" + options.LookQualificationId + "'>" + options.QualificationName + "</option>";
                    $(".QualificationType").append(other);
                    $("#QualificationName").val("");
                } else if (response.ResultType == 2) {
                    alert(response.Message);

                } else {
                    alert("Exception Occured");
                    // window.location.href = "@Url.Action("No505","Error")";
                }
            },
            error: function (response) {
                debugger;
                alert("Ajax Call Error...")
                // window.location.href = "@Url.Action("No505","Error")";
            }
        });
    }

    function AddOrganization() {
        var program = new Object();
        program.OrganizationName = $("#OrganizationName").val();
        program.OrganizationURL = $("#OrganizationURL").val();
        $.ajax({
            url: '/Organization/CreateOrganization',
            type: 'POST',
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify(program),
            success: function (response) {
                debugger;
                if (response.Data != null && response.ResultType == 1) {
                    var options = response.Data;
                    //var first = "<option value=''>--Please Select Qualification--</option>";
                    var other = "";
                    var other = " <option value='" + options.LookOrganizationId + "'>" + options.OrganizationName + "</option>";
                    $(".Organization").append(other);
                    $("#LookOrganizationName").val("");
                    $("#LookOrganizationURL").val("");
                } else if (response.ResultType == 2) {
                    alert(response.Message);

                } else {
                    alert("Exception Occured");
                    // window.location.href = "@Url.Action("No505","Error")";
                }
            },
            error: function (response) {
                debugger;
                alert("Ajax Call Error");
                //window.location.href = "@Url.Action("No505","Error")";
            }
        });
    }

    function AddInstitution() {
        debugger;
        var program = new Object();
        program.InstitutionName = $("#InstitutionName").val();
        $.ajax({
            url: '/Institution/CreateInstitution',
            type: 'POST',
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify(program),
            success: function (response) {
                debugger;
                if (response.Data != null && response.ResultType == 1) {
                    var options = response.Data;
                    var other = " <option value='" + options.LookInstitutionId + "'>" + options.InstitutionName + "</option>";
                    //$.each(options, function (key, value) {
                    //    debugger;
                    //    other = other + " <option value='" + value.Value + "'>" + value.Text + "</option>";
                    //});
                    $(".Institute").append(other);
                    $("#InstitutionName").val("");
                } else if (response.ResultType == 2) {
                    alert(response.Message);

                } else {
                    alert("Exception Occured");
                    // window.location.href = "@Url.Action("No505","Error")";
                }
            },
            error: function (response) {
                debugger;
                alert("Ajax Call Error");
                //window.location.href = "@Url.Action("No505","Error")";
            }
        });
    }


    jQuery.validator.setDefaults({
        debug: true,
        success: "valid"
    });
    $("#frmInsert").validate({
        rules: {
            FirstName: {
                required: true
            },
            LastName: {
                required: true
            },
            //FatherName: {
            //    required: true
            //},
            //HusbandName: {
            //    required: true
            //},
            ManagerId: {
                required: true
            },
            FullName: {
                required: true
            },
            Email: {
                required: true
            },
            MobileNo: {
                required: true
            },
            ConatctInfo: {
                required: true
            },
            CNIC: {
                required: true
            },
            MaritalStatus: {
                required: true
            },
            PresentAddress: {
                required: true
            },
            PermanentAddress: {
                required: true
            },
            Gender: {
                required: true
            },
            DateOfBirth: {
                required: true
            },
            ShortSummary: {
                required: true
            },
            ICEContactInfo: {
                required: true
            },
            HRRemarks: {
                required: true
            },
            NoYearsOfExperience: {
                required: true
            },
            StartSalary: {
                required: true
            },
            ReferenceName: {
                required: true
            },
            ReferenceEmail: {
                required: true
            },
            DateOfJoining: {
                required: true
            },
           
            LookEmployeeTypeId: {
                required: true
            },
            LookDepartmentId: {
                required: true
            },
            LookDesignationId: {
                required: true
            },
          
            LookQualificationId: {
                required: true
            },
            EducationYear: {
                required: true
            },
            LookInstitutionId: {
                required: true
            },
            Grade: {
                required: true
            },
            LookOrganizationId: {
                required: true
            },
            FromDate: {
                required: true
            },
            ToDate: {
                required: true
            },
            JobTitle: {
                required: true
            },
            Salary: {
                required: true
            },
            Name: {
                required: true
            },
            Relation: {
                required: true
            },
            Gender: {
                required: true
            },
            Resume: {
                required: true
            }
        },
        submitHandler: function (form) {
            form.submit();
        }



    });



    function validate_adduser() {
        debugger;
        var check = true;
        //if (!$.trim($(".QualificationType").val()) || $.trim($(".QualificationType").val()) == '0') {
        //    // $("#fail_validation").removeClass("display-hide");
        //    $("#failvalidation").html('<div><p> Please Enter Qualification name </p></div>');
        //    alert("Please Enter Qualification name");
        //    $("#failvalidation").focus();
        //    check = false; return check;
        //}
        //else if (!$.trim($(".Year").val()) || $.trim($(".Year").val()) == '0') {
        //    //$("#fail_validation").removeClass("display-hide");
        //    // $(".Year").html('<div><p> Please Enter Year</p></div>');
        //    alert("Please Enter Year");
        //    $(".Year").focus();
        //    check = false;
        //    return check;
        //}
        //else if (!$.trim($(".Institute").val()) || $.trim($(".Institute ").val()) == '0') {
        //    //$("#fail_validation").removeClass("display-hide");
        //    //$(".Institute").html('<p>Please Selct Institute</p>');
        //    alert("Please Enter Institute");
        //    $(".Institute").focus();
        //    check = false; return check;
        //}
        //else if (!$.trim($(".Grades ").val()) || $.trim($(".Grades ").val()) == '0') {
        //    debugger;
        //    // $("#fail_validation").removeClass("display-hide");
        //    //$(".Grades").html('<p>Please Selct Grades</p>');
        //    alert("Please Enter Grades");
        //    $(".Grades").focus();
        //    check = false; return check;
        //}
        //else if (!$.trim($(".FromDate").val()) || $.trim($(".FromDate").val()) == '0') {
        //    debugger;
        //    // $("#fail_validation").removeClass("display-hide");
        //    //$(".Grades").html('<p>Please Selct Grades</p>');
        //    alert("Please Enter From Date");
        //    $(".FromDate").focus();
        //    check = false; return check;
        //}
        //else if (!$.trim($(".ToDate").val()) || $.trim($(".ToDate").val()) == '0') {
        //    debugger;
        //    // $("#fail_validation").removeClass("display-hide");
        //    //$(".Grades").html('<p>Please Selct Grades</p>');
        //    alert("Please Enter From Date");
        //    $(".ToDate ").focus();
        //    check = false; return check;
        //}
        //else if (!$.trim($(".JobTitle").val()) || $.trim($(".JobTitle").val()) == '0') {
        //    debugger;
        //    // $("#fail_validation").removeClass("display-hide");
        //    //$(".Grades").html('<p>Please Selct Grades</p>');
        //    alert("Please Enter From Date");
        //    $(".JobTitle").focus();
        //    check = false; return check;
        //}
        //else if (!$.trim($(".Salary").val()) || $.trim($(".Salary").val()) == '0') {
        //    debugger;
        //    // $("#fail_validation").removeClass("display-hide");
        //    //$(".Grades").html('<p>Please Selct Grades</p>');
        //    alert("Please Enter From Date");
        //    $(".Salary").focus();
        //    check = false; return check;
        //}
        //else if (!$.trim($(".JobTitle").val()) || $.trim($(".JobTitle").val()) == '0') {
        //    debugger;
        //    // $("#fail_validation").removeClass("display-hide");
        //    //$(".Grades").html('<p>Please Selct Grades</p>');
        //    alert("Please Enter From Date");
        //    $(".ToDate ").focus();
        //    check = false; return check;
        //}
        //else if (!$.trim($(".Name").val()) || $.trim($(".Name").val()) == '0') {
        //    debugger;
        //    // $("#fail_validation").removeClass("display-hide");
        //    //$(".Grades").html('<p>Please Selct Grades</p>');
        //    alert("Please Enter From Date");
        //    $(".ToDate ").focus();
        //    check = false; return check;
        //}
        //else if (!$.trim($(".Relation").val()) || $.trim($(".Relation").val()) == '0') {
        //    debugger;
        //    // $("#fail_validation").removeClass("display-hide");
        //    //$(".Grades").html('<p>Please Selct Grades</p>');
        //    alert("Please Enter From Date");
        //    $(".ToDate ").focus();
        //    check = false; return check;
        //}
        //$("#fail_validation").addClass("display-hide");
        //$("#fail_validation").html('<button class="close" data-close="alert"></button> You have some form errors. Please check below.');
        //$("#succeed_validation").removeClass("display-hide");
        //$("#succeed_validation").html('<button class="close" data-close="alert"></button> Your form validation is successful!');
        return check;
    }

</script>
@model Result<List<EmployeeViewModel>>
@using Library.Core;
@using Library.Extensions;
@using Library.Core.Services;
@using VM.HRMS;
@{
    ViewBag.Title = "EmployeeList";
    Layout = "~/Views/Shared/_MainLayout.cshtml";
}
<div class="content-wrapper">
    <h3>
        Employees
        <a href="@Url.Action("Create","Employee")">
            <button type="button" class="btn btn-primary pull-right"><i class="fa fa-plus"></i>&nbsp;&nbsp;&nbsp;Add New Employee</button>
        </a>
    </h3>
    <div class="row">
        <div class="col-lg-12">
            <div class="panel panel-default">
                <div class="panel-heading">
                    Employees List Info
                </div>
                <div class="panel-body">
                    <table id="datatable1" class="table table-striped table-hover">
                        <thead>
                            <tr>
                                <th>S.NO.</th>
                                <th>Email</th>
                                <th>Name</th>
                                <th>Job Title</th>
                                <th>Department</th>
                                <th>Manager</th>
                                <th>Joining</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model.IsNotNull() && Model.Data.CountedPositive())
                            {
                                var count = 0;
                                IEnumerable<SelectListItem> tempDesignation = ViewBag.DesignatioList;
                                foreach (var item in Model.Data)
                                {
                                    // var Resume = @System.Configuration.ConfigurationManager.AppSettings["UploadApplicantPath"] + item.Resume;
                                    // var CoveringLetter = @System.Configuration.ConfigurationManager.AppSettings["UploadApplicantPath"] + item.CoveringLetter;
                                   
                                        
                                    //var designationName = tempDesignation.Where(x => x.Value == item.LookDesignationId.ToString()).FirstOrDefault();
                                    count = count + 1;

                                    <tr class="gradeX">
                                        <td>@count</td>
                                        <td>@item.Email</td>
                                        <td>@item.FullName</td>
                                        <td>@try
                                        {
                                            var designationName = tempDesignation.Where(x => x.Value == item.LookDesignationId.ToString()).FirstOrDefault();
                                             @designationName.Text
                                        }catch(Exception e) { }


                                        </td>
<td>@item.DepartmentName</td>
                                        <td>
@item.ManagerName
                                            @*@if (item.CoveringLetter.IsNotNullOrEmpty())
                                            {
                                                <a href="@CoveringLetter" target="_blank" style="">
                                                    <span>CoveringLatter</span>
                                                </a>
                                            }
                                            @if (item.Resume.IsNotNullOrEmpty())
                                            {
                                                <a href="@Resume" target="_blank" style=" margin-left:5px">
                                                    <span>Resume</span>
                                                </a>
                                            }*@
                                        </td>
                                        <td>@if (item.DateOfJoining.IsNotNull()) {@item.DateOfJoining.Value.ToShortDateString()}</td>

                                        <td class="table_action" nowrap>
                                            @*@if(item.UserId>0){
                                            <em class="icon-user-follow" style="font-size: 18px;color:gainsboro" title="User Created" ></em>
                                            }else {
                                              <em data-toggle="modal" id="promote_@item.EmployeeId" data-target="#PromoteUserModal" EmployeedId="@item.EmployeeId" EmployeeEmail="@item.Email" title="Create User" EmployeeName="@item.FullName" style="font-size: 18px;cursor:pointer"  class="promote icon-user-follow" ></em>

                                            }*@
                                            <a href="@Url.Action("Create","Employee",new {id=item.EmployeeGuid })" title="Edit Employee Detail"><em class="icon-note" style="font-size: 18px;"></em></a>
                                            @*<a href="http://unitechlabpk.com/admin/departments/create/51" title="Edit Department"><em class="icon-note" style="font-size: 18px;"></em></a>*@
                                            <em class="delete_record icon-close" title="Delete Employee" style="font-size:18px;color:red" rel="51"></em>
                                        </td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                    @*<div class="row" style="margin-top: 10px;">
                            <div class="col-xs-6">
                                <div class="dataTables_info" id="datatable1_info" role="status" aria-live="polite">Showing 1 to 10 of 57 entries</div>
                            </div><div class="col-xs-6">
                                <div class="dataTables_paginate paging_simple_numbers" id="datatable1_paginate">
                                    <ul class="pagination">
                                        <li class="paginate_button previous disabled" aria-controls="datatable1" tabindex="0" id="datatable1_previous">
                                            <a href="#">Previous</a>
                                        </li>
                                        <li class="paginate_button active" aria-controls="datatable1" tabindex="0"><a href="#">1</a></li>
                                        <li class="paginate_button " aria-controls="datatable1" tabindex="0"><a href="#">2</a></li>
                                        <li class="paginate_button " aria-controls="datatable1" tabindex="0"><a href="#">3</a></li>
                                        <li class="paginate_button " aria-controls="datatable1" tabindex="0"><a href="#">4</a></li>
                                        <li class="paginate_button " aria-controls="datatable1" tabindex="0"><a href="#">5</a></li>
                                        <li class="paginate_button " aria-controls="datatable1" tabindex="0"><a href="#">6</a></li>
                                        <li class="paginate_button next" aria-controls="datatable1" tabindex="0" id="datatable1_next"><a href="#">Next</a></li>
                                    </ul>
                                </div>
                            </div>
                        </div>*@
                </div>
            </div>
        </div>
    </div>

</div>
<div id="PromoteUserModal" class="modal fade" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Add User</h4>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <label>Email<span class="required" aria-required="true">*</span></label>
                    <input class="form-control" id="Email" name="Email" placeholder="Email" type="text" value="" autocomplete="new-password">
                </div>

                <div class="form-group">
                    <label>Password<span class="required" aria-required="true">*</span></label>
                    <input class="form-control" id="Password" name="Password" placeholder="Password" type="password" value="" autocomplete="new-password">
                </div>

                <div class="form-group">
                    <select class="form-control" name="RoleId" id="role">
                        <option value="">Select Role</option>
                    </select>
                </div>
            </div>
        </div>
        <div class="modal-footer">
            <button type="button" id="AddUser" class="btn btn-primary" data-dismiss="modal">Save</button>
            <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
        </div>
    </div>

</div>
<script type="text/javascript">
    var email;
    var employeeId;
    var EmployeeName;
    $(document).ready(function () {
       /* $(document).off("click", ".paginate_button").on("click", ".paginate_button", function (event) {
            event.preventDefault();
            alert('wasim');

        });*/
        
        GetRolesValues();
        $(document).off("click", ".promote").on("click", ".promote", function (event) {
            debugger;
            ////email         = $(this).attr('EmployeeEmail');
            employeeId    = $(this).attr('EmployeedId');
            //EmployeeName  = $(this).attr('EmployeeName');
        });

        
        $(document).off("blur", "#Email").on("blur", "#Email", function (event) {
            debugger;
            //IsEmailAvailable
            var EmailText=$('#Email').val();
            $.ajax({
                url: '/User/IsEmailAvailable?email=' + EmailText,
                type: 'Get',
                dataType: "json",
                contentType: "application/json; charset=utf-8",
               // data: JSON.stringify(user),
                success: function (response) {
                    debugger;
                    if (response.ResultType == 1) {
                      //  $('#Email').val('');
                      //  $('#Password').val('');
                      //  $('#role').val('');
                       // alert("Data Saved");
                    }
                    else {
                        alert(response.Message);
                        // window.location.href = "@Url.Action("No505","Error")";
                    }
                },
                error: function (response) {
                    debugger;
                    alert("Ajax Call Error");
                    //window.location.href = "@Url.Action("No505","Error")";
                }
            });
        });
        $(document).off("click", "#AddUser").on("click", "#AddUser", function (event) {
            debugger;
            AddUser();
        });
    });
    function AddUser() {

        debugger;
        var user = new Object();
        user.Email = $("#Email").val();
        user.Password = $("#Password").val();
        //user.RoleId = $("#role").val();
        user.RoleId = $('#role :selected').val();
        user.EmployeeId = employeeId;
        
        $.ajax({
            url: '/User/SignUp',
            type: 'POST',
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify(user),
            success: function (response) {
                debugger;
                if (response.Data == true && response.ResultType == 1) 
                {
                    $('#Email').val('');
                    $('#Password').val('');
                    $('#role').val('');
                    alert("Data Saved");
                    
                    $('#promote_' + employeeId).removeAttr("data-toggle");
                    $('#promote_' + employeeId).removeAttr("data-target");
                    $('#promote_' + employeeId).removeClass("promote");
                    $('#promote_' + employeeId).css('color', 'gainsboro');
                } 
                else
                {
                    alert("Exception Occured");
                    // window.location.href = "@Url.Action("No505","Error")";
                }
            },
            error: function (response) {
                debugger;
                alert("Ajax Call Error");
                //window.location.href = "@Url.Action("No505","Error")";
            }
        });
    }
    function GetRolesValues() {
        debugger;
        $.ajax({
            url: '/User/GetUserRoles',
            type: 'Get',
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            success: function (response) {
                debugger;
                if (response.Data != null) {
                    $.each(response.Data, function (key, value) {
                        debugger;
                        $("#role").append($("<option></option>").val(value.RoleId).html(value.Name));
                    })
                }
                else {
                    alert("Exception Occured");
                    // window.location.href = "@Url.Action("No505","Error")";
                }
            },
            error: function (response) {
                debugger;
                alert("Ajax Call Error");
                //window.location.href = "@Url.Action("No505","Error")";
            }
        });
        }
</script>
